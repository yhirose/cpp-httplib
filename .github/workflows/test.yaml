name: test

on: [push, pull_request]

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: install libraries
        run: sudo apt-get update && sudo apt-get install -y libbrotli-dev libcurl4-openssl-dev
      - name: build and run tests
        run: cd test && make -j4
      - name: run fuzz test target
        run: cd test && make fuzz_test

  macos:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: build and run tests
        run: |
          cd test && make -j2

  windows:
    runs-on: windows-latest
    steps:
    - name: prepare git for checkout on windows
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf
    - name: checkout
      uses: actions/checkout@v4
    - name: setup msbuild on windows
      uses: microsoft/setup-msbuild@v2
    - name: build and run tests
      run: |
        cd test
        msbuild.exe test.sln /verbosity:minimal /t:Build "/p:Configuration=Release;Platform=x64"
        x64\Release\test.exe        
    - name: Install libraries
      run: |
        vcpkg install gtest curl zlib brotli
        choco openssl
    - name: Configure CMake for Release
      run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DHTTPLIB_TEST=ON -DHTTPLIB_REQUIRE_OPENSSL -DHTTPLIB_REQUIRE_ZLIB=ON -DHTTPLIB_REQUIRE_BROTLI=ON
    - name: Build with CMake
      run: cmake --build build --config Release
    - name: Run tests with CTest
      run: ctest --output-on-failure --test-dir build -C Release
